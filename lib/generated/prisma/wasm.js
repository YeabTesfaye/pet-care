
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  email: 'email',
  role: 'role',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServiceCategoryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  details: 'details',
  pricing: 'pricing',
  duration: 'duration',
  image: 'image'
};

exports.Prisma.DiscussionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  category: 'category',
  author: 'author',
  avatar: 'avatar',
  replies: 'replies',
  views: 'views',
  timeAgo: 'timeAgo',
  hot: 'hot',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  type: 'type',
  date: 'date',
  time: 'time',
  location: 'location',
  description: 'description',
  attendees: 'attendees',
  image: 'image',
  createdAt: 'createdAt'
};

exports.Prisma.ResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  icon: 'icon',
  description: 'description',
  count: 'count',
  type: 'type',
  author: 'author',
  featured: 'featured',
  image: 'image',
  createdAt: 'createdAt'
};

exports.Prisma.ExpertScalarFieldEnum = {
  id: 'id',
  name: 'name',
  specialty: 'specialty',
  image: 'image',
  bio: 'bio',
  expertise: 'expertise',
  createdAt: 'createdAt'
};

exports.Prisma.LostFoundPetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  breed: 'breed',
  gender: 'gender',
  age: 'age',
  location: 'location',
  date: 'date',
  description: 'description',
  contact: 'contact',
  image: 'image',
  reward: 'reward',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.SuccessStoryScalarFieldEnum = {
  id: 'id',
  pet: 'pet',
  type: 'type',
  days: 'days',
  story: 'story',
  image: 'image',
  createdAt: 'createdAt'
};

exports.Prisma.ResourceCategoryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  icon: 'icon',
  description: 'description',
  count: 'count',
  color: 'color',
  textColor: 'textColor',
  borderColor: 'borderColor'
};

exports.Prisma.InteractiveToolScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  icon: 'icon',
  color: 'color',
  textColor: 'textColor',
  borderColor: 'borderColor',
  createdAt: 'createdAt'
};

exports.Prisma.DownloadableResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  type: 'type',
  category: 'category',
  description: 'description',
  downloads: 'downloads',
  image: 'image',
  createdAt: 'createdAt'
};

exports.Prisma.ShopCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  count: 'count',
  createdAt: 'createdAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryId: 'categoryId',
  price: 'price',
  originalPrice: 'originalPrice',
  rating: 'rating',
  reviews: 'reviews',
  image: 'image',
  sale: 'sale',
  new: 'new',
  bestseller: 'bestseller',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.PetStatus = exports.$Enums.PetStatus = {
  LOST: 'LOST',
  FOUND: 'FOUND'
};

exports.Prisma.ModelName = {
  User: 'User',
  ServiceCategory: 'ServiceCategory',
  Service: 'Service',
  Discussion: 'Discussion',
  Event: 'Event',
  Resource: 'Resource',
  Expert: 'Expert',
  LostFoundPet: 'LostFoundPet',
  SuccessStory: 'SuccessStory',
  ResourceCategory: 'ResourceCategory',
  InteractiveTool: 'InteractiveTool',
  DownloadableResource: 'DownloadableResource',
  ShopCategory: 'ShopCategory',
  Product: 'Product'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
